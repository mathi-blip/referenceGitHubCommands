### head -> master

git init --> to create a git repository in the folder


****** unix commands *******
touch <filename> to create files
start <filename> to open the files
cd
pwd




****** Git commands **************
git status -- to get the status of the changes
git log -- to see the previous commits on the branch
git add -- to stage the changes which needs to be commited
git rm --cached <<filename>> --> to exclude from the staging area
git restore <<fileName>> --> to unstage the file
git add . -- add all the changed files to the changing area
git commit --amend --> it will add files or correct the imediate last commit.

.gitignore --> will have a list of files, folders or format of the file which should be ignore during commits


########## Git Branching:
git branch --> will give list of all branches and highlight the current branch by giving * appended to the prefix
git branch -v --> will result all the branches, with latest commit points
git branch <<branch name>>--> will create new branch
git switch <<branch name>> --> will switch to the branch which is specified
git switch -c <<branch name>> --> create a branch and then switch to that branch
git checkout <<branch name>> --> same as switch
git checkout -b <<branch name>> --> same as switch -c
git branch -d <<bn>> --> deletes the branch if its merged and while deleting should not be on the same branch
git branch -D <<bn>> --> force delete your changes
git branch -m <<new bn>> --> will rename the branch 

########### Git Diff commands
git diff --> will give diff between last commits and latest changes
git diff --staged or -- cached --> will list the changes between the staging area and our last commit.
* to view changes within a specific file use the below command.
	git diff Head [filename]
	git diff --staged[filename]
git diff branch1..branch2 --> will list the changes between the tips of branch1 and branch2

 

##############GIT STASHING###########################
git stash --> to stash the files
git stash pop --> to apply the latest stash to the branch
git stash apply --> if we want to apply this changes to multiple branches, we can use this commands.
--> Working with multiple stashes
git stash apply <<apply id>>
git stash drop <<>stash id>
git stash clear --> will clear the all the stashing

###########GIt MERGING#########################

1. Go to the branch where you want to merge the changes
2. git merge <<bn>> will merge the branch

#######################################conflict changes################ check

hello there

